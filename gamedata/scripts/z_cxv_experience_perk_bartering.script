local bartering = 0

local function experience_skill_on_update(id, data)
	if (id == "perk_silver_tongued") then
		bartering = data["curr_level"]
	end
end

community_bonus_self = 0
community_bonus_other = 0
local community_bonus = 0
local skill_price_modifier = 0
local totalamounttraded = 0
local item_costs = {}

function perk_silver_tongued_cost(kind, obj, profile, calculated_cost, ret)
	if profile.mode == 1 then -- when selling
		ret.new_cost = math.floor((ret.new_cost or calculated_cost) * (1 + skill_price_modifier + community_bonus))
	elseif profile.mode == 2 then -- when buying
		ret.new_cost = math.ceil((ret.new_cost or calculated_cost) * (1 - skill_price_modifier - community_bonus))
	end
	item_costs[obj:id()] = ret.new_cost or calculated_cost
end

function perk_silver_tongued_start()
	RegisterScriptCallback("actor_on_item_take", actor_on_item_buy)
	RegisterScriptCallback("actor_on_item_drop", actor_on_item_sell)
	trader = mob_trade.GetTalkingNpc()
	
	if trader and trader:character_community() == db.actor:character_community() then
		community_bonus = community_bonus_self
	elseif trader then
		community_bonus = community_bonus_other
	end
	
	skill_price_modifier = bartering * 0.05
end

function actor_on_item_buy(obj)
	cost = item_costs[obj:id()]

	if type(cost) == "number" then
		if cost >= 1 then
			totalamounttraded = totalamounttraded + (cost * 0.8)
		end
	end
end

function actor_on_item_sell(obj)
	cost = item_costs[obj:id()]
	
	if type(cost) == "number" then -- When donating the cost can be a boolean, which crashes the game if this isn't checked...
		if cost >= 1 then
			totalamounttraded = totalamounttraded + (cost * 1.2)
		end
	end
end

function perk_silver_tongued_end()
	UnregisterScriptCallback("actor_on_item_take", actor_on_item_buy)
	UnregisterScriptCallback("actor_on_item_drop", actor_on_item_sell)
	if experience_potions then
		experience_utils.IncreaseExperience(totalamounttraded/75)
	else
		experience_core.increase_experience(totalamounttraded/75)
	end
	totalamounttraded = 0
	item_costs = {}
end


function on_game_start()
	if experience_potions then
		RegisterScriptCallback("experience_skill_on_update", experience_skill_on_update)
	else
		RegisterScriptCallback("experience_perk_on_update", experience_skill_on_update)
	end

	RegisterScriptCallback("ActorMenu_on_trade_started", perk_silver_tongued_start)
	RegisterScriptCallback("ActorMenu_on_trade_closed", perk_silver_tongued_end)
	RegisterScriptCallback("on_get_item_cost", perk_silver_tongued_cost)
end
