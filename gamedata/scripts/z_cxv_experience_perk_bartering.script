local totalamounttraded = 0
item_costs = {}

function perk_silver_tongued_cost(kind, obj, profile, calculated_cost, ret)
	if profile.mode == 1 then -- when selling
		ret.new_cost = math.floor((ret.new_cost or calculated_cost) * (1 + (x_cxv_perks_data.perks["perk_silver_tongued"] * 0.05)))
	elseif profile.mode == 2 then -- when buying
		ret.new_cost = math.ceil((ret.new_cost or calculated_cost) * (1 - (x_cxv_perks_data.perks["perk_silver_tongued"] * 0.05)))
	end
	item_costs[obj:id()] = ret.new_cost or calculated_cost
end

function perk_silver_tongued_start()
	RegisterScriptCallback("actor_on_item_take", actor_on_item_buy)
	RegisterScriptCallback("actor_on_item_drop", actor_on_item_sell)
end

function actor_on_item_buy(obj)
	cost = item_costs[obj:id()]

	if type(cost) == "number" then
		if cost >= 1 then
			totalamounttraded = totalamounttraded + (cost * 0.8)
		end
	end
end

function actor_on_item_sell(obj)
	cost = item_costs[obj:id()]
	
	if type(cost) == "number" then -- When donating the cost can be a boolean, which crashes the game if this isn't checked...
		if cost >= 1 then
			totalamounttraded = totalamounttraded + (cost * 1.2)
		end
	end
end

function perk_silver_tongued_end()
	UnregisterScriptCallback("actor_on_item_take", actor_on_item_buy)
	UnregisterScriptCallback("actor_on_item_drop", actor_on_item_sell)
	if experience_potions then
		experience_utils.IncreaseExperience(totalamounttraded/75)
	else
		experience_core.increase_experience(totalamounttraded/75)
	end
	totalamounttraded = 0
	item_costs = {}
end


function on_game_start()
	RegisterScriptCallback("ActorMenu_on_trade_started", perk_silver_tongued_start)
	RegisterScriptCallback("ActorMenu_on_trade_closed", perk_silver_tongued_end)
	RegisterScriptCallback("on_get_item_cost", perk_silver_tongued_cost)
end
