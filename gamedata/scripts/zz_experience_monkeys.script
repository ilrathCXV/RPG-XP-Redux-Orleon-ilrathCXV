if not experience_error.can_load(script_name()) then return end
-- Monkey patches for some needs Experience Framework

-- Required for compatibility
if zz_item_cooking_keep_crafting_window_open then end
if zz_item_repair_keep_crafting_window_open then end
if zz_ui_workshop_keep_crafting_window_open then end
if zzzz_food_degradation_z_item_cooking then end
if zzzz_food_degradation_z_ui_mutant_loot then end


-- Spawning the Potions in stalkers death body and in stashes
function try_spawn_potions(box)
	local potions_to_spawn = {
		["xp_oblivion_potion"] = 0.005,		-- 0.5%
		["xp_experience_potion"] = 0.03		-- 3%
	}
	for sec, chance in pairs(potions_to_spawn) do
		if ((math.random(1,1000)/1000) <= chance) then
			alife_create_item(sec, box)
		end
	end
end

---------------------------------------------------------------------------------------------------------------------------------
-- bind_stalker_ext.script ------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------
-- Give the actor experience for completing tasks
local ignore_task_ids = {
	["hide_from_surge"]				= true,
	["hide_from_psi_storm"]			= true,
	["task_placeable_waypoint"]		= true
}

local ActorOnTaskCallback = bind_stalker_ext.actor_on_task_callback
bind_stalker_ext.actor_on_task_callback = function(binder,_task,_state)
	ActorOnTaskCallback(binder,_task,_state)
	
	if _state ~= task.fail then
		if _state == task.completed then
			local task_id = _task:get_id()
			
			if (ignore_task_ids[task_id]) then
				return
			end
			
			local storyline = task_manager.task_ini:r_bool_ex(task_id,"storyline",false)
			experience_core.give_actor_experience_by_task(storyline)
			experience_core.get_daily_manager():SendEvent("complete_tasks", 1)
		end
	end
end

---------------------------------------------------------------------------------------------------------------------------------
-- treasure_manager.script ------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------
-- Give an actor experience for finding a stash
local TrySpawnTreasure = treasure_manager.try_spawn_treasure
treasure_manager.try_spawn_treasure = function(box)
	local id = box:id()
	
	if not (treasure_manager.caches[id]) then
		return
	end
	
	if not (type(treasure_manager.caches[id]) == "string") then
		return
	end
	
	TrySpawnTreasure(box)
	try_spawn_potions(box)
	experience_core.give_actor_experience_by_stash()
	experience_core.get_daily_manager():SendEvent("find_stashes", 1)
end

---------------------------------------------------------------------------------------------------------------------------------
-- death_manager.script ---------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------
local CreateReleaseItem = death_manager.create_release_item
death_manager.create_release_item = function(npc)
    CreateReleaseItem(npc)
	try_spawn_potions(npc)
end

---------------------------------------------------------------------------------------------------------------------------------
-- pda.script -------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------
-- Give an actor experience for discovering spots
local ds_primary_objects_tbl = {
      {target="mar_2c_01_anomaly_spot",					        hint="st_mar_2c_01_anomaly_spot_name"},
      {target="mar_2c_02_anomaly_spot",					        hint="st_mar_2c_02_anomaly_spot_name"},
	  {target="ds_2c_01_anomaly_spot",					        hint="st_ds_2c_01_anomaly_spot_name"},
      {target="ds_2c_02_anomaly_spot",					        hint="st_ds_2c_02_anomaly_spot_name"},
      {target="ds_2c_03_anomaly_spot",					        hint="st_ds_2c_03_anomaly_spot_name"},
      {target="ds_2c_04_anomaly_spot",					        hint="st_ds_2c_04_anomaly_spot_name"},
	  {target="trc_2c_01_rift_anom_spot",					    hint="st_trc_2c_01_rift_anom_spot_name"},
      {target="trc_2c_02_chem_anom_spot",					    hint="st_trc_2c_02_chem_anom_spot_name"},
      {target="trc_2c_03_desolation_anom_spot",			        hint="st_trc_2c_03_desolation_anom_spot_name"},
	  {target="esc_2c_01_high_hopes_anomaly_spot",		        hint="st_esc_2c_01_high_hopes_anomaly_spot_name"},
	  {target="gar_2c_01_nwi_anomaly_spot",				        hint="st_gar_2c_01_nwi_anomaly_spot_name"},
      {target="gar_2c_02_toaster_anomaly_spot",			        hint="st_gar_2c_02_toaster_anomaly_spot_name"},
	  {target="agr_2c_01_hg_anomaly_spot",				        hint="st_agr_2c_01_hg_anomaly_spot_name"},
	-- Undergound anomalies are commented out until we can have underground minimaps.
	--{target="labx18_2c_01_deep_burn_anomaly_spot",	        hint="st_labx18_2c_01_deep_burn_anomaly_spot_name"},
	--{target="labx18_2c_02_ff_anomaly_spot",			        hint="st_labx18_2c_02_ff_anomaly_spot_name"},
	--{target="labx18_2c_03_elders_anomaly_spot",		        hint="st_labx18_2c_03_elders_anomaly_spot_name"},
	--{target="labx18_2c_04_bioh_anomaly_spot",			        hint="st_labx18_2c_04_bioh_anomaly_spot_name"},
	  {target="bar_2c_01_grant_anomaly_spot",				    hint="st_bar_2c_01_grant_anomaly_spot_name"},
	  {target="ros_2c_01_tunnel_anomaly_spot",			        hint="st_ros_2c_01_tunnel_anomaly_spot_name"},
      {target="ros_2c_02_crispy_train_anomaly_spot",		    hint="st_ros_2c_02_crispy_train_anomaly_spot_name"},
      {target="ros_2c_03_yc_anomaly_spot",				        hint="st_ros_2c_03_yc_anomaly_spot_name"},
	  {target="mil_2c_01_hw_anomaly_spot",				        hint="st_mil_2c_01_hw_anomaly_spot_name"},
	  {target="yan_2c_01_cd_anomaly_spot",				        hint="st_yan_2c_01_cd_anomaly_spot_name"},
	--{target="x16_lab_2c_01_fb_anomy_spot",			        hint="st_x16_lab_2c_01_fb_anomy_spot_name"},
	  {target="cit_2c_01_ch_anomaly_spot",				        hint="st_cit_2c_01_ch_anomaly_spot_name"},
      {target="cit_2c_02_pg_anomaly_spot",				        hint="st_cit_2c_02_pg_anomaly_spot_name"},
	  {target="lim_2c_01_ls_anomaly_spot",				        hint="st_lim_2c_01_ls_anomaly_spot_name"},
      {target="lim_2c_02_ib_anomaly_spot",				        hint="st_lim_2c_02_ib_anomaly_spot_name"},
	  {target="rad_2c_01_bl_anomaly_spot",				        hint="st_rad_2c_01_bl_anomaly_spot_name"},
      {target="rad_2c_02_pp_anomaly_spot",				        hint="st_rad_2c_02_pp_anomaly_spot_name"},
	--{target="bun_2c_01_f_anomaly_spot",				        hint="st_bun_2c_01_f_anomaly_spot_name"},
	--{target="bun_2c_02_gp_anomaly_spot",				        hint="st_bun_2c_02_gp_anomaly_spot_name"},
	  {target="pri_2c_01_pp_anomaly_spot",				        hint="st_pri_2c_01_pp_anomaly_spot_name"},
      {target="pri_2c_02_gt_anomaly_spot",				        hint="st_pri_2c_02_gt_anomaly_spot_name"},
      {target="pri_2c_03_wr_anomaly_spot",				        hint="st_pri_2c_03_wr_anomaly_spot_name"},
      {target="pri_2c_04_o_anomaly_spot",					    hint="st_pri_2c_04_o_anomaly_spot_name"},
	  {target="aes_2c_01_ce_anomaly_spot",				        hint="st_aes_2c_01_ce_anomaly_spot_name"},
      {target="aes_2c_02_p_anomaly_spot",					    hint="st_aes_2c_02_p_anomaly_spot_name"},
	  {target="aes2_2c_01_bo_anomaly_spot",				        hint="st_aes2_2c_01_bo_anomaly_spot_name"},
      {target="aes2_2c_02_at_anomaly_spot",				        hint="st_aes2_2c_02_at_anomaly_spot_name"},
	--{target="sar_2c_01_r_anomaly_spot",				        hint="st_sar_2c_01_r_anomaly_spot_name"},
	  {target="gen_2c_01_ss_anomaly_spot",				        hint="st_gen_2c_01_ss_anomaly_spot_name"},
	  {target="mar_smart_terrain_11_3_anomaly_spot",		    hint="st_mar_smart_terrain_11_3_anomaly_spot_name"},
      {target="mar_smart_terrain_10_10_anomaly_spot",		    hint="st_mar_smart_terrain_10_10_anomaly_spot_name"},
      {target="mar_smart_terrain_base_anomaly_spot",		    hint="st_mar_smart_terrain_base_anomaly_spot_name"},
      {target="mar_smart_terrain_8_8_anomaly_spot",		        hint="st_mar_smart_terrain_8_8_anomaly_spot_name"},
      {target="mar_smart_terrain_12_2_anomaly_spot",		    hint="st_mar_smart_terrain_12_2_anomaly_spot_name"},
      {target="mar_smart_terrain_3_7_anomaly_spot",		        hint="st_mar_smart_terrain_3_7_anomaly_spot_name"},
      {target="mar_smart_terrain_3_3_anomaly_spot",		        hint="st_mar_smart_terrain_3_3_anomaly_spot_name"},
	  {target="esc_smart_terrain_1_11_anomaly_spot",		    hint="st_esc_smart_terrain_1_11_anomaly_spot_name"},
      {target="esc_smart_terrain_8_9_anomaly_spot",		        hint="st_esc_smart_terrain_8_9_anomaly_spot_name"},
      {target="esc_smart_terrain_5_4_anomaly_spot",		        hint="st_esc_smart_terrain_5_4_anomaly_spot_name"},
	  {target="gar_smart_terrain_3_7_anomaly_spot",		        hint="st_gar_smart_terrain_3_7_anomaly_spot_name"},
      {target="gar_smart_terrain_3_7_anomaly_spot_2",		    hint="st_gar_smart_terrain_3_7_anomaly_spot_2_name"},
      {target="gar_smart_terrain_2_4_anomaly_spot",		        hint="st_gar_smart_terrain_2_4_anomaly_spot_name"},
      {target="gar_smart_terrain_6_7_anomaly_spot",		        hint="st_gar_smart_terrain_6_7_anomaly_spot_name"},
      {target="gar_smart_terrain_5_6_anomaly_spot",		        hint="st_gar_smart_terrain_5_6_anomaly_spot_name"},
      {target="gar_smart_terrain_1_7_anomaly_spot",		        hint="st_gar_smart_terrain_1_7_anomaly_spot_name"},
	  {target="agr_smart_terrain_1_3_anomaly_spot",		        hint="st_agr_smart_terrain_1_3_anomaly_spot_name"},
      {target="agr_smart_terrain_4_4_near_3_anomaly_spot",      hint="st_agr_smart_terrain_4_4_near_3_anomaly_spot_name"},
      {target="agr_smart_terrain_5_7_anomaly_spot", 		    hint="st_agr_smart_terrain_5_7_anomaly_spot_name"},
      {target="agr_smart_terrain_5_2_anomaly_spot", 		    hint="st_agr_smart_terrain_5_2_anomaly_spot_name"},
      {target="agr_smart_terrain_1_2_anomaly_spot", 		    hint="st_agr_smart_terrain_1_2_anomaly_spot_name"},
	  {target="val_smart_terrain_9_10_anomaly_spot",		    hint="st_val_smart_terrain_9_10_anomaly_spot_name"},
      {target="val_smart_terrain_6_4_anomaly_spot",		        hint="st_val_smart_terrain_6_4_anomaly_spot_name"},
      {target="val_smart_terrain_8_6_anomaly_spot",		        hint="st_val_smart_terrain_8_6_anomaly_spot_name"},
      {target="val_smart_terrain_9_4_anomaly_spot",		        hint="st_val_smart_terrain_9_4_anomaly_spot_name"},
      {target="val_smart_terrain_8_9_anomaly_spot",		        hint="st_val_smart_terrain_8_9_anomaly_spot_name"},
	  {target="mil_smart_terrain_4_7_anomaly_spot",		        hint="st_mil_smart_terrain_4_7_anomaly_spot_name"},
      {target="mil_smart_terrain_2_1_anomaly_spot",		        hint="st_mil_smart_terrain_2_1_anomaly_spot_name"},
      {target="mil_smart_terrain_2_6_anomaly_spot",		        hint="st_mil_smart_terrain_2_6_anomaly_spot_name"},
      {target="mil_smart_terrain_7_4_anomaly_spot",		        hint="st_mil_smart_terrain_7_4_anomaly_spot_name"},
      {target="mil_smart_terrain_8_3_anomaly_spot",		        hint="st_mil_smart_terrain_8_3_anomaly_spot_name"},
	  {target="yan_smart_terrain_2_5_anomaly_spot",		        hint="st_yan_smart_terrain_2_5_anomaly_spot_name"},
      {target="yan_smart_terrain_zombi_spawn_anomaly_spot",		hint="st_yan_smart_terrain_zombi_spawn_anomaly_spot_name"},
      {target="yan_smart_terrain_5_3_anomaly_spot",		        hint="st_yan_smart_terrain_5_3_anomaly_spot_name"},
      {target="yan_smart_terrain_4_2_anomaly_spot",		        hint="st_yan_smart_terrain_4_2_anomaly_spot_name"},
	  {target="red_smart_terrain_6_3_anomaly_spot",		        hint="st_red_smart_terrain_6_3_anomaly_spot_name"},
      {target="red_smart_terrain_4_5_anomaly_spot",		        hint="st_red_smart_terrain_4_5_anomaly_spot_name"},
      {target="red_smart_terrain_monsters_anomaly_spot",	    hint="st_red_smart_terrain_monsters_anomaly_spot_name"},
      {target="red_smart_terrain_3_2_anomaly_spot",		        hint="st_red_smart_terrain_3_2_anomaly_spot_name"},
      {target="red_smart_terrain_6_6_anomaly_spot",		        hint="st_red_smart_terrain_6_6_anomaly_spot_name"},
      {target="red_smart_terrain_3_1_anomaly_spot",		        hint="st_red_smart_terrain_3_1_anomaly_spot_name"},
	  {target="gen_smart_terrain_urod_anomaly_spot",		    hint="st_gen_smart_terrain_urod_anomaly_spot_name"},
	  {target="trc_sim_13_anomal_zone_spot",				    hint="st_trc_sim_13_anomal_zone_spot_name"},
	
	-- POLE
      {target="pol_smart_terrain_1_2_anomaly_spot",		        hint="st_pol_smart_terrain_1_2_anomaly_spot_name"},

	-- MLR
      {target="dasc_treesucker_state_spot",	                    hint="st_dasc_treesucker_state_name"},
      {target="tc_smart_terrain_bandit_base_spot",	            hint="st_tc_bandit_base_name"},
      {target="rad_smart_terrain_kpp_spot",	                    hint="st_tc_kpp_name"},
      {target="rad_smart_terrain_vert_spot",	                hint="st_tc_vert_name"},
      {target="radar_smart_terrain_first_zastava_spot",	        hint="st_radar_first_zastava_name"},
      {target="rad_smart_terrain_bunker_spot",	                hint="st_rad_bunker_name"},
      {target="red_smart_terrain_dark_yar_spot",	            hint="st_red_dark_yar_name"},
      {target="red_smart_terrain_central_mine_spot",	        hint="st_red_central_mine_name"},
      {target="red_smart_terrain_crap_spot",	                hint="st_red_crap_name"},
      {target="agr_smart_terrai_SRI_spot",	                    hint="st_agr_SRI_name"},
      {target="mar_smart_terrain_post_spot",	                hint="st_lim_post_vishka_name"},
      {target="mar_smart_terrain_old_church_spot",	            hint="st_lim_old_church_name"},
      {target="mar_smart_terrain_village_csky_spot",	        hint="st_lim_village_csky_name"},
      {target="mar_smart_terrain_water_pump_station_spot",	    hint="st_lim_water_pump_station_name"},
      {target="mar_smart_terrain_mechanic_yard_spot",	        hint="st_lim_mechanic_yard_name"},
      {target="red_smart_terrain_bridge_spot",	                hint="st_lim_bridge_name"},
      {target="red_smart_terrain_house_lesnik_spot",	        hint="st_lim_house_lesnik_name"},
      {target="lim_smart_first_zastava_spot",	                hint="st_lim_zastava_name"},
      {target="lim_smart_bubbles_spot",                  	    hint="st_lim_bubbles_name"},
      {target="lim_smart_nonbuild_spot",		                hint="st_lim_nonbuild_name"},
      {target="lim_smart_dyga_spot",		                    hint="st_lim_dyga_name"},
      {target="ds_smart_administration_spot",	                hint="st_ds_administration_name"},
      {target="ds_smart_market_spot",                  	        hint="st_ds_market_name"},
      {target="ds_smart_house_of_culture_spot",		            hint="st_ds_HoC_name"},
      {target="esc_smart_terrain_novice_village_spot",	        hint="st_novice_village_name"},
      {target="esc_smart_terrain_south_blokpost_spot",	        hint="st_south_blokpost_name"},
      {target="esc_smart_terrain_ATP_spot",		                hint="st_ATP_name"},
      {target="esc_smart_terrain_elevator_spot",		        hint="st_elevator_name"},
      {target="esc_smart_terrain_tunnel_electr_spot",		    hint="st_tunnel_electr_name"},
      {target="esc_smart_terrain_neut_base_spot",		        hint="st_neut_base_name"},
      {target="esc_smart_terrain_north_blockpost_spot",	        hint="st_north_blockpost_name"},
      {target="dar_smart_terrain_farm_spot",		            hint="st_dar_farm_name"},
      {target="dar_smart_terrain_complex_proizv_spot",	        hint="st_dar_complex_name"},
      {target="mil_smart_terrain_bs_village_spot",	            hint="st_bs_village_name"},
      {target="mil_smart_terrain_base_freedom_spot",		    hint="st_base_freedom_name"},
      {target="mil_smart_terrain_border_spot",	                hint="st_border_name"},
      {target="pri_smart_terrain_mon_base_spot",	            hint="st_mon_base_name"},
      {target="pri_smart_terrain_hotel_poless_spot",		    hint="st_hotel_poless_name"},
      {target="pri_smart_terrain_big_bus_station_spot",	        hint="st_big_bus_station_name"},
      {target="gar_smart_terrain_6_3_baraholka_spot",		    hint="st_gar_baraholka_name"},
      {target="gar_smart_terrain_dolg_outpost_spot",		    hint="st_gar_outpost_name"},
      {target="gar_smart_terrain_3_5_angar_spot",		        hint="st_gar_angar_name"},
      {target="bar_smart_terrain_bar100rent_spot",		        hint="st_bar100rent_name"},
      {target="yan_smart_terrain_6_4_bunker_spot",		        hint="st_yanbunker_name"},
      {target="yan_smart_terrain_proizvcomplex_spot",		    hint="st_yancomplex_name"},

      {target="zat_b55_spot",		                            hint="st_zat_b55_name_land"},
      {target="zat_b100_spot",	                                hint="st_zat_b100_name_land"},
      {target="zat_b104_spot",	                                hint="st_zat_b104_name_land"},
      {target="zat_b38_spot", 	                                hint="st_zat_b38_name_land"},
      {target="zat_b40_spot",	                                hint="st_zat_b40_name_land"},
      {target="zat_b56_spot",		                            hint="st_zat_b56_name_land"},
      {target="zat_b5_spot",  	                                hint="st_zat_b5_name_land"},
      {target="zat_a2_spot",  	                                hint="st_zat_a2_name_land"},
      {target="zat_b20_spot",  	                                hint="st_zat_b20_name_land"},
      {target="zat_b20_spot",		                            hint="st_zat_fire_name_land"},
      {target="zat_b53_spot",		                            hint="st_zat_b53_name_land"},
      {target="zat_b101_spot",	                                hint="st_zat_b101_name_land"},
      {target="zat_b101_spot",	                                hint="st_zat_waste_name_land"},
      {target="zat_b106_spot",	                                hint="st_zat_b106_name_land"},
      {target="zat_b7_spot",  	                                hint="st_zat_b7_name_land"},
      {target="zat_b14_spot",  	                                hint="st_zat_b14_name_land"},
      {target="zat_b14_spot",		                            hint="st_zat_tide_name_land"},
      {target="zat_b52_spot",  	                                hint="st_zat_b52_name_land"},
      {target="zat_b39_spot",		                            hint="st_zat_b39_name_land"},
      {target="zat_b33_spot",  	                                hint="st_zat_b33_name_land"},
      {target="zat_b18_spot",  	                                hint="st_zat_b18_name_land"},
      {target="zat_b54_spot",		                            hint="st_zat_b54_name_land"},
      {target="zat_b12_spot",  	                                hint="st_zat_b12_name_land"},
      {target="zat_b28_spot",  	                                hint="st_zat_b28_name_land"},
      {target="zat_b103_spot",	                                hint="st_zat_b103_name_land"},
      {target="jup_b1_spot",		                            hint="st_jup_b1_name_land"},
      {target="jup_b46_spot",  	                                hint="st_jup_b46_name_land"},
      {target="jup_b202_spot",	                                hint="st_jup_b202_name_land"},
      {target="jup_b211_spot",	                                hint="st_jup_b211_name_land"},
      {target="jup_b200_spot",	                                hint="st_jup_b200_name_land"},
      {target="jup_b19_spot",  	                                hint="st_jup_b19_name_land"},
      {target="jup_a6_spot",  	                                hint="st_jup_a6_name_land"},
      {target="jup_b25_spot",  	                                hint="st_jup_b25_name_land"},
      {target="jup_b25_spot",		                            hint="st_jup_earth_name_land"},
      {target="jup_b6_spot",  	                                hint="st_jup_b6_name_land"},
      {target="jup_b205_spot",	                                hint="st_jup_b205_name_land"},
      {target="jup_b206_spot",	                                hint="st_jup_b206_name_land"},
      {target="jup_b206_spot",	                                hint="st_jup_grove_name_land"},
      {target="jup_b32_spot",  	                                hint="st_jup_b32_name_land"},
      {target="jup_a10_spot",  	                                hint="st_jup_a10_name_land"},
      {target="jup_b209_spot",	                                hint="st_jup_b209_name_land"},
      {target="jup_b208_spot",	                                hint="st_jup_b208_name_land"},
      {target="jup_a12_spot", 	                                hint="st_jup_a12_name_land"},
      {target="jup_b212_spot",	                                hint="st_jup_b212_name_land"},
      {target="jup_b9_spot",  	                                hint="st_jup_b9_name_land"},
      {target="jup_b201_spot",	                                hint="st_jup_b201_name_land"},
      {target="jup_a9_spot",  	                                hint="st_jup_a9_name_land"},

      {target="pri_a28_spot",			                        hint="st_pri_a28_name_land"},
      {target="pri_b36_spot",			                        hint="st_pri_b36_name_land"},
      {target="pri_b303_spot",		                            hint="st_pri_b303_name_land"},
      {target="pri_b301_spot",		                            hint="st_pri_b301_name_land"},
      {target="pri_a17_spot",			                        hint="st_pri_a17_name_land"},
      {target="pri_b306_spot",		                            hint="st_pri_b306_name_land"},
      {target="pri_b306_spot",		                            hint="st_pri_plug_name_land"},
      {target="pri_a16_spot",			                        hint="st_pri_a16_name_land"},
      {target="pri_a25_spot",			                        hint="st_pri_a25_name_land"},
      {target="pri_b35_spot",			                        hint="st_pri_b35_name_land"},
      {target="pri_a21_spot",			                        hint="st_pri_a21_name_land"},
      {target="pri_b304_spot",		                            hint="st_pri_b304_name_land"},
      {target="pri_b304_spot",		                            hint="st_pri_bath_name_land"},
      {target="pri_a18_spot",			                        hint="st_pri_a18_name_land"},
      {target="pri_anomal_vulkan_spot",	                        hint="st_pri_b307_name_land"},
      {target="pri_anomal_loza_spot",		                    hint="st_pri_b302_name_land"}
}

local ds_distance_tbl = {
	["l12_stancia"] = 45,
	["l12_stancia_2"] = 45,
	["l11_hospital"] = 30,
	["l10_limansk"] = 35,
	["l06_rostok"] = 30,
	["k02_trucks_cemetery"] = 45,
}

local DiscoverSpots = pda.discover_spots
pda.discover_spots = function()
	local actor = db.actor
	for k,v in pairs(ds_primary_objects_tbl) do
		if actor:dont_has_info(v.target) then
			local obj_id = get_story_object_id(v.target)
			if obj_id and db.storage[obj_id] and db.storage[obj_id].object then
				local n_dist = ds_distance_tbl[level.name()] or 40
				if (db.storage[obj_id].object:position():distance_to(actor:position()) <= n_dist) then
					experience_core.give_actor_experience_by_discover_spot()
				end
			end
		end
	end
	DiscoverSpots()
end

---------------------------------------------------------------------------------------------------------------------------------
-- item_parts.script ------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------
-- Give an actor experience for disassembly items
local DisassemblyWeapon = item_parts.disassembly_weapon
item_parts.disassembly_weapon = function(obj, obj_d)
	local npc = obj:parent()
	if (not npc) then
		printf("~ item_parts | no owner found for [%s]", obj:name())
		return
	end
	DisassemblyWeapon(obj, obj_d)
	experience_core.give_actor_experience_by_disassembly_items(obj)
	experience_core.get_daily_manager():SendEvent("disassembly_items", 1)
end

local DisassemblyOutfit = item_parts.disassembly_outfit
item_parts.disassembly_outfit = function(obj, obj_d)
	local npc = obj:parent()
	if (not npc) then
		printf("~ item_parts | no owner found for [%s]", obj:name())
		return
	end
	DisassemblyOutfit(obj, obj_d)
	experience_core.give_actor_experience_by_disassembly_items(obj)
	experience_core.get_daily_manager():SendEvent("disassembly_items", 1)
end

local DisassemblyItem = item_parts.disassembly_item
item_parts.disassembly_item = function(obj, obj_d)
	local npc = obj:parent()
	if (not npc) then
		printf("~ item_parts | no owner found for [%s]", obj:name())
		return
	end
	local sec = obj:section()
	local parts = itms_manager.ini_parts:r_string_ex("nor_parts_list",sec)
	if (not parts) then
		return
	end
	DisassemblyItem(obj, obj_d)
	experience_core.give_actor_experience_by_disassembly_items(obj)
	experience_core.get_daily_manager():SendEvent("disassembly_items", 1)
end

---------------------------------------------------------------------------------------------------------------------------------
-- ui_mutant_loot.script --------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------
-- Give the actor experience for looting a mutant
local UIMutantOnLoot = ui_mutant_loot.UIMutantLoot.Loot
ui_mutant_loot.UIMutantLoot.Loot = function(self, loot_all)
	local obj_mutant = level.object_by_id(self.id)
	if (not obj_mutant) then
		self:Close()
		return
	end
	
	local loot_count = 0
	
	if loot_all then
		local tbl = self.loot
		for sec,t in pairs(tbl) do
			for i=1,t.count do
				loot_count = loot_count + 1
			end
		end
	else
		for idx,ci in pairs(self.CC.cell) do
			if ci.flags.selected then
				loot_count = loot_count + 1
			end
		end
	end
	
	UIMutantOnLoot(self, loot_all)
	experience_core.give_actor_experience_by_mutant_loot(loot_count)
	experience_core.get_daily_manager():SendEvent("looting_mutants", loot_count)
end

---------------------------------------------------------------------------------------------------------------------------------
-- item_repair.script -----------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------
-- Give the actor experience for repair items
local UIOnRepair = item_repair.UIRepair.OnRepair
item_repair.UIRepair.OnRepair = function(self)
	local obj_1 = self.CC[1]:GetCell_Selected(true)
	
	if not (obj_1 and self.con_val[4]) then return end
	
	local add_cond = self.con_val[2] + self.con_val[3]
	
	UIOnRepair(self)
	experience_core.give_actor_experience_by_repair_items(add_cond)
	experience_core.get_daily_manager():SendEvent("repair_items", 1)
end

---------------------------------------------------------------------------------------------------------------------------------
-- item_cooking.script ----------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------
-- Give the actor experience for cooking food
local UIOnCook = item_cooking.UICook.OnCook
item_cooking.UICook.OnCook = function(self)
	local meal = self:GetSelectedMeal()
	if (not meal) then
		return
	end
	
	UIOnCook(self)
	experience_core.give_actor_experience_by_cooking()
	experience_core.get_daily_manager():SendEvent("cooking_foods", 1)
end

---------------------------------------------------------------------------------------------------------------------------------
-- ui_workshop.script -----------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------
-- Give the actor experience for work on a workbench
local UIWorkShopOnCraft		= ui_workshop.UIWorkshopCraft.Craft
local UIWorkShopOnRepair	= ui_workshop.UIWorkshopRepair.Repair
local UIWorkShopOnUpgrade	= ui_workshop.UIWorkshopUpgrade.Upgrade
ui_workshop.UIWorkshopCraft.Craft = function(self)
	if (not self.craft_allow_r) then 
		return 
	end
	
	local cnt = #self.craft_item
	
	UIWorkShopOnCraft(self)
	experience_core.give_actor_experience_by_workshop("craft", cnt)
	experience_core.get_daily_manager():SendEvent("craft_items", 1)
end

ui_workshop.UIWorkshopRepair.Repair = function(self)
	local obj = self.CC["inventory"]:GetCell_Selected(true)
	if (not obj) then
		return
	end
	
	local cnt = 0
	
	if is_not_empty(self.new_con) then
		for i=1,6 do
			if self.parts[i] and self.parts[i].sec and (self.parts[i].sec ~= "na") then
				if self.new_con[i] and self.new_con[i].id then
					cnt = cnt + 1
				end
			end
		end
	else
		ui_workshop.print_ws("! UIWorkshopRepair:Repair() | no new parts have been replaced")
		return
	end
	
	UIWorkShopOnRepair(self)
	experience_core.give_actor_experience_by_workshop("repair", cnt)
end

ui_workshop.UIWorkshopUpgrade.Upgrade = function(self)
	local obj = self.CC:GetCell_Selected(true)
	if (not obj) then
		return
	end
	
	local cnt = 0
	
	for k, v in pairs(self.inst_upgr) do
		if (not obj:has_upgrade(k)) then
			cnt = cnt + 1
		end
	end
	
	UIWorkShopOnUpgrade(self)
	experience_core.give_actor_experience_by_workshop("upgrade", cnt)
end

---------------------------------------------------------------------------------------------------------------------------------
-- haru_skills.script (Anomaly Skill System Mod) --------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------
-- Give the actor experience for level up skills by Haruka
if haru_skills and haru_skills.level_up_skill then
	local HarukaLevelUpSkills = haru_skills.level_up_skill
	haru_skills.level_up_skill = function(name)
		HarukaLevelUpSkills(name)
		local current_level = haru_skills.skills_levels and haru_skills.skills_levels[name].current_level or 1
		experience_core.give_actor_experience_by_haruka_skills(current_level)
	end
end