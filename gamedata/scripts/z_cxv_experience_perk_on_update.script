if perk_based_artefacts then end

local cybermedic = 0
local master_zone = 0
local iron_resolve = 0

local af_lucifer_data = perk_based_artefacts.artefact_props.af_lucifer

local function experience_skill_on_update(id, data)
	if (id == "perk_cybermedic") then
		cybermedic = data["curr_level"]
	end
	if (id == "perk_master_zone") then
		master_zone = data["curr_level"]
	end
	if (id == "perk_iron_resolve") then
		iron_resolve = data["curr_level"]
	end
end

local old_time              = 0
-- local lucifer_time			= 0
-- local heal_lucifer			= false

--------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------

function perk_effects_over_time()
    if time_global() < old_time then return end
    old_time = time_global() + 200
	
	--if time_global() >= lucifer_time then
	--	lucifer_time = time_global() + 1500		-- + 3000
	--	heal_lucifer = true
	--end

-------------------------------------------------------------> Cybermedic
    if cybermedic >= 1 then
		local bleedingCure = 0
        bleedingCure = 0.00075 * cybermedic
		db.actor.bleeding = bleedingCure
    end
-------------------------------------------------------------> Master of the Zone
	if master_zone >= 1 then 
		-- local artyBonus = 0.00015
		local has_lucifer_belt = false
		db.actor:iterate_belt( function(owner, obj)
			local condition = obj:condition()
			local newCondition = condition + 0.00015
			if obj:section() == af_lucifer then
				if af_lucifer_data.condition < 0.51 then
					af_lucifer_data.condition = clamp(newCondition, 0, 0.51)
				end
			else
				obj:set_condition(clamp(newCondition, 0, 0.99))
			end
		end)
	end

------Броненосец-7. Иммунитет к долгоиграющим эффектам -------------------> Refreshness
    if iron_resolve >= 1 then
		local dizzyRemoval = -0.001 * iron_resolve
		db.actor.alcohol = dizzyRemoval
    end

end

function on_game_start()
	if experience_potions then
		RegisterScriptCallback("experience_skill_on_update", experience_skill_on_update)
	else
		RegisterScriptCallback("experience_perk_on_update", experience_skill_on_update)
	end	
	
    RegisterScriptCallback("actor_on_update",               perk_effects_over_time)
end