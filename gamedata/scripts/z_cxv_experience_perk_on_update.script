if perk_based_artefacts then end

local cybermedic = 0
local master_zone = 0
local iron_resolve = 0

local af_lucifer_data = perk_based_artefacts.artefact_props.af_lucifer

local function experience_skill_on_update(id, data)
	if (id == "perk_cybermedic") then
		cybermedic = data["curr_level"]
	end
	if (id == "perk_master_zone") then
		master_zone = data["curr_level"]
	end
	if (id == "perk_iron_resolve") then
		iron_resolve = data["curr_level"]
	end
end

local time_elapsed		 = 0
local saved_time_elapsed = 0
local old_time       	 = 0

-- Credit to PBA for in-world time condition updating
local get_game_time 	 = game.get_game_time
local get_start_time 	 = level.get_start_time
local time_factor 	 	 = 6 -- Default time_factor
local floor				 = math.floor
local max 				 = math.max

local function get_time_elapsed()
	--trace(time_factor)
	return math.floor(get_game_time():diffSec(get_start_time()) / time_factor * 10) * 0.1
end

--------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------

function perk_effects_over_time()
    if time_global() < old_time then return end
    old_time = time_global() + 200
	
	time_elapsed = get_time_elapsed()
	local effect_factor = max(0, saved_time_elapsed > 0 and time_elapsed > 0 and (time_elapsed - saved_time_elapsed) or 1)

-------------------------------------------------------------> Cybermedic
    if cybermedic >= 1 then
		local bleedingCure = 0
        bleedingCure = 0.00075 * cybermedic * effect_factor
		db.actor.bleeding = bleedingCure
    end
-------------------------------------------------------------> Master of the Zone
	if master_zone >= 1 then 
		-- local artyBonus = 0.00015
		local has_lucifer_belt = false
		db.actor:iterate_belt( function(owner, obj)
			local condition = obj:condition()
			if condition >= 0.99 then return end
			local newCondition = condition + 0.00015 * effect_factor
			if obj:section() == af_lucifer then
				if af_lucifer_data.condition < 0.51 then
					af_lucifer_data.condition = clamp(newCondition, 0, 0.51)
				end
			else
				obj:set_condition(clamp(newCondition, 0, 0.99))
			end
		end)
	end

------Броненосец-7. Иммунитет к долгоиграющим эффектам -------------------> Refreshness
    if iron_resolve >= 1 then
		local dizzyRemoval = -0.001 * iron_resolve * effect_factor
		db.actor.alcohol = dizzyRemoval
    end
	
	saved_time_elapsed = time_elapsed
end

function on_game_start()
	if experience_potions then
		RegisterScriptCallback("experience_skill_on_update", experience_skill_on_update)
	else
		RegisterScriptCallback("experience_perk_on_update", experience_skill_on_update)
	end	
	
    RegisterScriptCallback("actor_on_update",               perk_effects_over_time)
end