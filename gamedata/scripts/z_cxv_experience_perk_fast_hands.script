local fast_hands = 0
local fast_hands_bonuses = {[0] = 0, [1] = 15, [2] = 30, [3] = 70, [4] = 70, [5] = 70} -- 4 & 5 are failsafes for older saves 

local function experience_skill_on_update(id, data)
	if (id == "perk_fast_hands") then
		fast_hands = data["curr_level"]
	end
end

local stow_anims = {
	anm_hide = true,
	anm_hide_0 = true,
	anm_hide_1 = true,
	anm_hide_2 = true,
	anm_hide_empty = true,
	anm_hide_g = true,
	anm_hide_w_gl = true,
	anm_show = true,
	anm_show_0 = true,
	anm_show_1 = true,
	anm_show_2 = true,
	anm_show_empty = true,
	anm_show_g = true,
	anm_show_w_gl = true,
}


function fast_hands_speed(anim_table,obj)
	-- if not IsWeapon(obj) then return end
	
	if (fast_hands < 1) then return end
	if not stow_anims[anim_table.anm_name] then return end
	
	local anm_speed_base = anim_table.anm_speed
	
	local swap_string = tostring(anim_table.anm_name)
	local item_sec = obj:section()
	local hud_sec = ini_sys:r_string_ex(item_sec,"hud")
	
	local swap_val = parse_list(ini_sys,hud_sec,swap_string)

	for k, v in pairs(swap_val) do
		if tonumber(v) then
			anm_speed_base = tonumber(v)
			break
		end
	end
	
	local swap_bonus = 1 + (fast_hands_bonuses[fast_hands] * 0.01)
	-- printf("[RPG] Swap Bonus: %s", swap_bonus)
	anim_table.anm_speed = anm_speed_base * swap_bonus
	
end

function on_game_start()
	if experience_potions then
		RegisterScriptCallback("experience_skill_on_update", experience_skill_on_update)
	else
		RegisterScriptCallback("experience_perk_on_update", experience_skill_on_update)
	end	

	RegisterScriptCallback("actor_on_hud_animation_play", fast_hands_speed)
end