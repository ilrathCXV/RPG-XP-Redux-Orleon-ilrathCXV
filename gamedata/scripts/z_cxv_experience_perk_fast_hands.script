local fast_hands = 0

local function experience_perk_on_update(id, data)
	if (id == "perk_fast_hands") then
		fast_hands = data["curr_level"]
	end
end

show_anims = {
	anm_show = true,
	anm_show_0 = true,
	anm_show_1 = true,
	anm_show_2 = true,
	anm_show_empty = true,
	anm_show_g = true,
	anm_show_w_gl = true
}

hide_anims = {
	anm_hide = true,
	anm_hide_0 = true,
	anm_hide_1 = true,
	anm_hide_2 = true,
	anm_hide_empty = true,
	anm_hide_g = true,
	anm_hide_w_gl = true,
}

function fast_hands_speed(anim_table,obj)
	-- if not IsWeapon(obj) then return end
	if (fast_hands <= 0) then return end
	
	local anm_speed = anim_table.anm_speed
	
	local swap_string = tostring(anim_table.anm_name)
	local item_sec = obj:section()
	local hud_sec = ini_sys:r_string_ex(item_sec,"hud")
	
	local swap_val = parse_list(ini_sys,hud_sec,swap_string)
	local swap_speed = reload_val and reload_val[2] and tonumber(reload_val[2])
	local swap_speed_2 = reload_val and reload_val[3] and tonumber(reload_val[3])
	local swap_speed_3 = reload_val and reload_val[4] and tonumber(reload_val[4])
	local swap_speed_4 = reload_val and reload_val[5] and tonumber(reload_val[5])
	
	if swap_speed then
		anm_speed = swap_speed
	elseif swap_speed_2 then
		anm_speed = swap_speed_2
	elseif swap_speed_3 then
		anm_speed = swap_speed_3
	elseif swap_speed_4 then
		anm_speed = swap_speed_4
	end
	
	if show_anims[anim_table.anm_name] or hide_anims[anim_table.anm_name] then
		anim_table.anm_speed = anm_speed * (1 + (fast_hands * 0.15))
		--printf("Weapon Handling Show/Hide")	
	end
end

function on_game_start()
	RegisterScriptCallback("experience_perk_on_update", experience_perk_on_update)

	RegisterScriptCallback("actor_on_hud_animation_play", fast_hands_speed)
end